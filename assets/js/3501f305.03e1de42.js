"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[74643],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),k=o,d=u["".concat(s,".").concat(k)]||u[k]||m[k]||r;return n?a.createElement(d,i(i({ref:t},p),{},{components:n})):a.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=k;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},25344:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var a=n(87462),o=(n(67294),n(3905));const r={id:"websocketframe",title:"WebSocketFrame"},i=void 0,c={unversionedId:"zio-http/dsl/socket/websocketframe",id:"zio-http/dsl/socket/websocketframe",title:"WebSocketFrame",description:"In the WebSocket protocol, communication happens using frames. ZIO",source:"@site/docs/zio-http/dsl/socket/websocketframe.md",sourceDirName:"zio-http/dsl/socket",slug:"/zio-http/dsl/socket/websocketframe",permalink:"/zio-http/dsl/socket/websocketframe",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/dsl/socket/websocketframe.md",tags:[],version:"current",frontMatter:{id:"websocketframe",title:"WebSocketFrame"},sidebar:"ecosystem-sidebar",previous:{title:"Socket",permalink:"/zio-http/dsl/socket/"},next:{title:"ZIO Http",permalink:"/zio-http/"}},s={},l=[{value:"Text",id:"text",level:2},{value:"Binary",id:"binary",level:2},{value:"Continuation",id:"continuation",level:2},{value:"Close",id:"close",level:2},{value:"Constructing Close with just status",id:"constructing-close-with-just-status",level:3},{value:"Constructing Close with status and a reason",id:"constructing-close-with-status-and-a-reason",level:3},{value:"Ping",id:"ping",level:2},{value:"Pong",id:"pong",level:2},{value:"Pattern Matching on WebSocketFrame",id:"pattern-matching-on-websocketframe",level:3}],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In the ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6455"},"WebSocket")," protocol, communication happens using frames. ZIO\nHTTP's ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/zio/zio-http/blob/main/zio-http/src/main/scala/zio/socket/WebSocketFrame.scala"},"WebSocketFrame"),"\nis the representation of those frames. The domain defines the following type of frames:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Text"),(0,o.kt)("li",{parentName:"ul"},"Binary"),(0,o.kt)("li",{parentName:"ul"},"Continuation"),(0,o.kt)("li",{parentName:"ul"},"Close"),(0,o.kt)("li",{parentName:"ul"},"Ping"),(0,o.kt)("li",{parentName:"ul"},"Pong")),(0,o.kt)("h2",{id:"text"},"Text"),(0,o.kt)("p",null,"To create a Text frame that models textual data in the WebSocket protocol, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"text")," constructor."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.http._\nimport zio.http.socket._\n\nWebSocketFrame.text("Hello from ZIO-HTTP")\n')),(0,o.kt)("h2",{id:"binary"},"Binary"),(0,o.kt)("p",null,"To create a Binary frame that models raw binary data, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"binary")," constructor."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.Chunk\nimport java.nio.charset.StandardCharsets\n\nWebSocketFrame.binary(Chunk.fromArray("Hello from ZIO-HTTP".getBytes(StandardCharsets.UTF_16)))\n')),(0,o.kt)("h2",{id:"continuation"},"Continuation"),(0,o.kt)("p",null,"To create a Continuation frame to model a continuation fragment of the previous message, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"continuation"),"\nconstructor."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'WebSocketFrame.continuation(Chunk.fromArray("Hello from ZIO-HTTP".getBytes(StandardCharsets.UTF_16)))\n')),(0,o.kt)("h2",{id:"close"},"Close"),(0,o.kt)("p",null,"To create a Close frame for a situation where the connection needs to be closed, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"close")," constructor.\nThe constructor requires two arguments:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Status"),(0,o.kt)("li",{parentName:"ul"},"Optional reason.")),(0,o.kt)("h3",{id:"constructing-close-with-just-status"},"Constructing Close with just status"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"WebSocketFrame.close(1000)\n")),(0,o.kt)("h3",{id:"constructing-close-with-status-and-a-reason"},"Constructing Close with status and a reason"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'WebSocketFrame.close(1000, Some("Normal Closure"))\n')),(0,o.kt)("p",null,"More information on status codes can be found\nin ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6455#section-7.4"},"Section 7.4")," of IETF's Data Tracker."),(0,o.kt)("h2",{id:"ping"},"Ping"),(0,o.kt)("p",null,"Ping models heartbeat in the WebSocket protocol. The server or the client can at any time, after a successful handshake,\nsend a ping frame."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"WebSocketFrame.ping\n")),(0,o.kt)("h2",{id:"pong"},"Pong"),(0,o.kt)("p",null,"Pong models the second half of the heartbeat in the WebSocket protocol. Upon receiving ",(0,o.kt)("a",{parentName:"p",href:"#ping"},"ping"),", a pong needs to be\nsent back."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"WebSocketFrame.ping\n")),(0,o.kt)("h3",{id:"pattern-matching-on-websocketframe"},"Pattern Matching on WebSocketFrame"),(0,o.kt)("p",null,"ZIO HTTP envisions the WebSocketFrame as a ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tagged_union"},"Sum")," type, which allows\nexhaustive pattern matching to be performed on it."),(0,o.kt)("p",null,"You can do pattern matching on the WebSocketFrame type in the following way:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"val frame: WebSocketFrame = ...\n\nframe match {\n  case WebSocketFrame.Binary(bytes) => ???\n  case WebSocketFrame.Text(text) => ???\n  case WebSocketFrame.Close(status, reason) => ???\n  case WebSocketFrame.Ping => ???\n  case WebSocketFrame.Pong => ???\n  case WebSocketFrame.Continuation(buffer) => ???\n}\n")))}m.isMDXComponent=!0}}]);